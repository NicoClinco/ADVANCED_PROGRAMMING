#include <stdio.h>
#include <iostream>
#include <functional>
#include <string>
#include <fstream>
#include <sstream>
#include <variant>
#include <optional>
#include "DATA_FRAME.hpp"

/*
template<class type>
type lookup(std::variant<double,std::string,int> v)
{
  type x = std::get<type>(v);
  return x;
}

*/

using entry = std::variant<double,int,std::string>;
using Opentry = std::optional<entry>;

Opentry opDouble(std::string s)
{
  return ! s.empty() ? Opentry(double(std::stod(s))) : std::nullopt;
}

Opentry opString(std::string s)
{
  return ! s.empty() ? Opentry(std::string(s)) : std::nullopt;
}

Opentry opInt(std::string s)
{
  return ! s.empty() ? Opentry(int(std::stoi(s))) : std::nullopt;
}


int main()
{
  // every row

  //specified by the user: create a map that maps the values given by the user to the integers:
  std::vector<std::string> row_structure = {"int","double","string","int","double"};

  // The user has to pass the data-structure:
  DATA_FRAME df(row_structure);
  df.read("input.txt");

  bool is_numeric = df.IsNumeric(1);
  if(!is_numeric)
    throw std::invalid_argument("cannot do the mean\n");

  //double std_dev = df.stdDev(2);
  //std::cout << std_dev << "\n";
  //std::cout << df.countWord(3,"papera")<<"\n";

   for(auto itrow = df.rowIterbegin();itrow!=df.rowIterEnd();itrow++)
    {
      int col=0;
      
      for(auto itc = df.colIterbegin(itrow,0);itc!=df.colIterEnd(itrow,3);itc++)
	{
	 
	  if(col==0){
	     std::cout << std::get<int>(*itc) << " ";
	     *itc = int(4);
	     //  std::cout << std::get<int>(*itc)<<" ";
	       }
	  if(col==1)
	    std::cout << std::get<double>(*itc) <<" ";
	  if(col==2)
	    std::cout << std::get<std::string>(*itc) <<" ";
	  col++;
	}
      std::cout<<std::endl;
    }

   auto [w,b] = df.LinearRegression<double,double>(2,5);


   /*
   std::string _s_ = "";
   Opentry ok = opDouble(_s_);
   if(!ok.has_value())
     std::cout << "-void-\n";
   */
   
   std::cout << "weight :"<<w << " " << "bias: "<< b <<"\n";
  



  
  return 0;

  
 
}
